import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TELEGRAM_TOKEN:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω Telegram. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –∑–∞–¥–∞–Ω–∞ –≤ —Ñ–∞–π–ª–µ .env.")

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# üì° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞:
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# ========================================================
# –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–∫ "video"
# ========================================================
@dp.message(F.content_type == "video")
async def get_video_file_id_video(message: types.Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç (video).
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç file_id –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTML-—Ä–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞.
    """
    logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ (video) –æ—Ç @{message.from_user.username or message.from_user.id}")
    try:
        file_id = message.video.file_id
        await message.reply(f"üìé –í–∞—à file_id:\n<code>{file_id}</code>", parse_mode="HTML")
        logger.info(f"‚úÖ file_id –≤–∏–¥–µ–æ: {file_id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –≤–∏–¥–µ–æ: {e}")
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ.")

# ========================================================
# –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç
# ========================================================
@dp.message(F.content_type == "document")
async def get_video_file_id_document(message: types.Message):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –≥–¥–µ –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç MIME-—Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞, —á—Ç–æ–±—ã —É–¥–æ—Å—Ç–æ–≤–µ—Ä–∏—Ç—å—Å—è, —á—Ç–æ —ç—Ç–æ –≤–∏–¥–µ–æ,
    –∑–∞—Ç–µ–º –∏–∑–≤–ª–µ–∫–∞–µ—Ç file_id –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π.
    """
    if message.document.mime_type and message.document.mime_type.startswith("video/"):
        logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ (–¥–æ–∫—É–º–µ–Ω—Ç) –æ—Ç @{message.from_user.username or message.from_user.id}")
        try:
            file_id = message.document.file_id
            await message.reply(f"üìé –í–∞—à file_id:\n<code>{file_id}</code>", parse_mode="HTML")
            logger.info(f"‚úÖ file_id –≤–∏–¥–µ–æ (–¥–æ–∫—É–º–µ–Ω—Ç): {file_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
            await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ-–¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    else:
        logger.warning("‚ùó –ü–æ–ª—É—á–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç, –Ω–æ MIME-—Ç–∏–ø –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∏–¥–µ–æ")
        await message.reply("–î–æ–∫—É–º–µ–Ω—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏–¥–µ–æ—Ñ–∞–π–ª–æ–º.")

# ========================================================
# –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
# ========================================================
@dp.message()
async def debug_message(message: types.Message):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ç–∏–ø –∫–∞–∂–¥–æ–≥–æ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∏—Ö.
    """
    logger.info(f"DEBUG: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –¢–∏–ø: {message.content_type}")

# ========================================================
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
# ========================================================
async def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
    –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è polling, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–∂–∏–¥–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.
    """
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ file_id.")
    await dp.start_polling(bot)

# ========================================================
# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
# ========================================================
if __name__ == "__main__":
    asyncio.run(main())
